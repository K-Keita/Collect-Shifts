[{"/Users/kitagawakeita/testProject/shift-app/src/index.js":"1","/Users/kitagawakeita/testProject/shift-app/src/reportWebVitals.js":"2","/Users/kitagawakeita/testProject/shift-app/src/templates/index.js":"3","/Users/kitagawakeita/testProject/shift-app/src/templates/Home.jsx":"4","/Users/kitagawakeita/testProject/shift-app/src/footer/index.js":"5","/Users/kitagawakeita/testProject/shift-app/src/footer/Footer.jsx":"6","/Users/kitagawakeita/testProject/shift-app/src/header/index.js":"7","/Users/kitagawakeita/testProject/shift-app/src/header/Header.jsx":"8","/Users/kitagawakeita/testProject/shift-app/src/templates/RegistShift.jsx":"9","/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/index.js":"10","/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/PrimaryButton.jsx":"11","/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/TimeSelect.jsx":"12","/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/ToggleShift.jsx":"13","/Users/kitagawakeita/testProject/shift-app/src/templates/ManagementPage.jsx":"14","/Users/kitagawakeita/testProject/shift-app/src/reducks/store/store.js":"15","/Users/kitagawakeita/testProject/shift-app/src/templates/MyInfomation.jsx":"16","/Users/kitagawakeita/testProject/shift-app/src/App.jsx":"17","/Users/kitagawakeita/testProject/shift-app/src/Router.jsx":"18","/Users/kitagawakeita/testProject/shift-app/src/components/index.js":"19","/Users/kitagawakeita/testProject/shift-app/src/components/ShiftTable.jsx":"20","/Users/kitagawakeita/testProject/shift-app/src/templates/Members.jsx":"21","/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/UsersList.jsx":"22","/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/SecondButton.jsx":"23","/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/TextArea.jsx":"24","/Users/kitagawakeita/testProject/shift-app/src/reducks/users/reducers.js":"25","/Users/kitagawakeita/testProject/shift-app/src/reducks/users/actions.js":"26","/Users/kitagawakeita/testProject/shift-app/src/reducks/store/initialState.js":"27","/Users/kitagawakeita/testProject/shift-app/src/serviceWorker.js":"28","/Users/kitagawakeita/testProject/shift-app/src/reducks/users/selectors.js":"29","/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/TextInput.jsx":"30","/Users/kitagawakeita/testProject/shift-app/src/templates/CreateGroupPage.jsx":"31","/Users/kitagawakeita/testProject/shift-app/src/templates/SignIn.jsx":"32","/Users/kitagawakeita/testProject/shift-app/src/templates/ShiftList.jsx":"33","/Users/kitagawakeita/testProject/shift-app/src/templates/SignUp.jsx":"34","/Users/kitagawakeita/testProject/shift-app/src/reducks/groups/reducers.js":"35","/Users/kitagawakeita/testProject/shift-app/src/reducks/groups/actions.js":"36","/Users/kitagawakeita/testProject/shift-app/src/reducks/groups/operations.js":"37","/Users/kitagawakeita/testProject/shift-app/src/firebase/index.js":"38","/Users/kitagawakeita/testProject/shift-app/src/firebase/config.js":"39","/Users/kitagawakeita/testProject/shift-app/src/reducks/users/operations.js":"40"},{"size":848,"mtime":1607178650539,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":1607083320949,"results":"43","hashOfConfig":"42"},{"size":456,"mtime":1607339172716,"results":"44","hashOfConfig":"42"},{"size":1526,"mtime":1607333262385,"results":"45","hashOfConfig":"42"},{"size":43,"mtime":1607087250057,"results":"46","hashOfConfig":"42"},{"size":1807,"mtime":1607385987093,"results":"47","hashOfConfig":"42"},{"size":43,"mtime":1607087765908,"results":"48","hashOfConfig":"42"},{"size":2652,"mtime":1607087741916,"results":"49","hashOfConfig":"42"},{"size":3540,"mtime":1607339604850,"results":"50","hashOfConfig":"42"},{"size":467,"mtime":1607261944320,"results":"51","hashOfConfig":"42"},{"size":392,"mtime":1607164130102,"results":"52","hashOfConfig":"42"},{"size":1444,"mtime":1607154626957,"results":"53","hashOfConfig":"42"},{"size":1603,"mtime":1607339456509,"results":"54","hashOfConfig":"42"},{"size":1360,"mtime":1607399082429,"results":"55","hashOfConfig":"42"},{"size":538,"mtime":1607387839787,"results":"56","hashOfConfig":"42"},{"size":179,"mtime":1607138015651,"results":"57","hashOfConfig":"42"},{"size":339,"mtime":1607386112013,"results":"58","hashOfConfig":"42"},{"size":850,"mtime":1607339184707,"results":"59","hashOfConfig":"42"},{"size":91,"mtime":1607141710631,"results":"60","hashOfConfig":"42"},{"size":3367,"mtime":1607243126651,"results":"61","hashOfConfig":"42"},{"size":393,"mtime":1607337674056,"results":"62","hashOfConfig":"42"},{"size":1127,"mtime":1607338151353,"results":"63","hashOfConfig":"42"},{"size":241,"mtime":1607149871560,"results":"64","hashOfConfig":"42"},{"size":166,"mtime":1607175363104,"results":"65","hashOfConfig":"42"},{"size":319,"mtime":1607179631924,"results":"66","hashOfConfig":"42"},{"size":484,"mtime":1607346451301,"results":"67","hashOfConfig":"42"},{"size":223,"mtime":1607387722743,"results":"68","hashOfConfig":"42"},{"size":5098,"mtime":1607178612762,"results":"69","hashOfConfig":"42"},{"size":187,"mtime":1607179644612,"results":"70","hashOfConfig":"42"},{"size":934,"mtime":1607386528769,"results":"71","hashOfConfig":"42"},{"size":1539,"mtime":1607393319431,"results":"72","hashOfConfig":"42"},{"size":347,"mtime":1607395517267,"results":"73","hashOfConfig":"42"},{"size":211,"mtime":1607336234161,"results":"74","hashOfConfig":"42"},{"size":1798,"mtime":1607393297477,"results":"75","hashOfConfig":"42"},{"size":326,"mtime":1607387995454,"results":"76","hashOfConfig":"42"},{"size":293,"mtime":1607388044825,"results":"77","hashOfConfig":"42"},{"size":1268,"mtime":1607399160629,"results":"78","hashOfConfig":"42"},{"size":459,"mtime":1607346771771,"results":"79","hashOfConfig":"42"},{"size":337,"mtime":1607389486406,"results":"80","hashOfConfig":"42"},{"size":1466,"mtime":1607392713182,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"884lrp",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"84"},"/Users/kitagawakeita/testProject/shift-app/src/index.js",[],["176","177"],"/Users/kitagawakeita/testProject/shift-app/src/reportWebVitals.js",[],"/Users/kitagawakeita/testProject/shift-app/src/templates/index.js",[],"/Users/kitagawakeita/testProject/shift-app/src/templates/Home.jsx",["178","179","180"],"import React, {useState} from 'react'\nimport {useDispatch} from 'react-redux'\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport {TextArea, TextInput} from '../components/UIkit/index';\nimport {push} from 'connected-react-router';\n\nconst d = new Date();\nconst y = d.getFullYear();\nconst m = d.getMonth() + 1;\n\nconst Home = () => {\n  const [value, onChange] = useState(new Date());\n  const dispatch = useDispatch()\n\n  const s = d.getDate() + ((14 - d.getDay() + 1));\n  const firstDate = new Date(y, m - 1, s);\n  const finishDate = new Date(y, m - 1, s + 6);\n  const deadline = new Date(y, m - 1, s - 7);\n\n  const startDate = firstDate.getMonth() + 1 + '/' + firstDate.getDate();\n  const endDate = finishDate.getMonth() + 1 + '/' + finishDate.getDate();\n  const deadlineDate = deadline.getMonth() + 1 + '/' + deadline.getDate();\n  const maxDate = new Date(y, m + 2 ,1)\n\n  return (\n    <div className=\"main-container\">\n      <h2 className=\"main-title\">calendar</h2>\n      <div className=\"calendar-container\">\n        <Calendar \n          value={value}\n          onChange={onChange}\n          locale=\"ja-JP\"\n          onClickDay={() => console.log(value.getDate())}\n          prev2AriaLabel={null}\n          minDate={d}\n          maxDate={maxDate}\n          next2Label={null}\n          prev2Label={null}\n        />\n      </div>\n      <TextArea text={\"tesuto\"} />\n\n      <h3>{startDate}〜{endDate}のシフト締め切りは{deadlineDate}です。</h3>\n\n    </div>\n  )\n}\n\nexport default Home;\n","/Users/kitagawakeita/testProject/shift-app/src/footer/index.js",[],"/Users/kitagawakeita/testProject/shift-app/src/footer/Footer.jsx",["181","182"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {push} from 'connected-react-router';\nimport AppBar from '@material-ui/core/AppBar';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleIcon from '@material-ui/icons/People';\n\nconst useStyles = makeStyles((theme) => ({\n  iconBox: {\n    width: \"20%\",\n    margin: 0,\n  },\n  toolBar: {\n    padding: 0,\n    width: '100%',\n  },\n  appBar: {\n    width: \"100%\",\n    margin: 0,\n    top: 'auto',\n    bottom: 0,\n    \n  },\n}));\n\nconst Footer = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n\n  const templatePage = [\n    {icon: <PeopleIcon />, path: \"/list\"},\n    {icon: <PlaylistAddIcon />, path: \"/regist\"},\n    {icon: <HomeIcon />, path: \"/\"},\n    {icon: <ListAltIcon />, path: \"/shift\"},\n    {icon: <SettingsIcon />, path: \"/management\"},\n  ]\n\n  const linkPage = (path) => {\n    dispatch(push(path));\n  }\n\n  return (\n    <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n      <Toolbar className={classes.toolBar}>\n        {templatePage.map((page,index) => {\n          return (\n            <IconButton key={String(index)} onClick={() => linkPage(page.path)} color=\"inherit\" className={classes.iconBox} >\n              {page.icon}\n            </IconButton>\n          )\n        })}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Footer;","/Users/kitagawakeita/testProject/shift-app/src/header/index.js",[],"/Users/kitagawakeita/testProject/shift-app/src/header/Header.jsx",[],"/Users/kitagawakeita/testProject/shift-app/src/templates/RegistShift.jsx",["183","184"],"import { Divider } from '@material-ui/core';\nimport React, {useState} from 'react'\nimport { PrimaryButton, TimeSelect, ToggleShift } from '../components/UIkit/index';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst d = new Date();\nconst y = d.getFullYear();\nconst m = d.getMonth() + 1;\n\nconst RegistShift = () => {\n  const [monday,setMonday] = useState(\"\");\n  const [tuesday, setTuesday] = useState(\"\");\n  const [wednesday, setWednesday] = useState(\"\");\n  const [thursday, setThursday] = useState(\"\");\n  const [friday, setFriday] = useState(\"\");\n  const [saturday, setSaturday] = useState(\"\");\n  const [sunday, setSunday] = useState(\"\");\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const startDate = d.getDate() + ((14 - d.getDay() + 1));\n  const firstDate = new Date(y, m - 1, startDate);\n  const shiftWeek = [{func: setMonday, name: monday},{func: setTuesday, name: tuesday}, {func: setWednesday, name: wednesday}, {func: setThursday, name: thursday}, {func: setFriday, name: friday}, {func: setSaturday, name: saturday}, {func: setSunday, name: sunday}]\n\n  for (var i = 0; i < 7; i++) {\n    const shiftDate = (firstDate.getMonth() + 1 + '/' + firstDate.getDate());\n    const shiftDay = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"][firstDate.getDay()];\n\n    firstDate.setDate(firstDate.getDate() + 1);\n  \n    shiftWeek[i].date = shiftDate\n    shiftWeek[i].day = shiftDay\n  }\n\n  const shiftView = () => {\n    console.log(monday,tuesday,wednesday,thursday,friday,saturday,sunday);\n    alert(`${shiftWeek[0].date}:${monday}\\n${tuesday}\\n${wednesday}\\n${thursday}\\nでよろしいですか？`)\n  }\n\n  return (\n    <div>\n      <h2>シフト登録</h2>\n      {shiftWeek.map((value, index) => {\n        return (\n          <ToggleShift timeLine={value.name} func={value.func} key={index} date={value.date} day={value.day}/>\n        )\n      })}\n      <div className=\"midium-space\" />\n      <PrimaryButton onClick={shiftView} label={\"登録\"} fullWidth={true} width={\"50%\"} />\n\n      <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <PrimaryButton label={\"シフト１\"} fullWidth={false} />\n      <PrimaryButton label={\"シフト２\"} fullWidth={false} />\n    </div>\n\n    </div>\n  )\n}\n\nexport default RegistShift;\n","/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/index.js",["185"],"import { formatMs } from '@material-ui/core';\n\nexport {default as DialogTime} from './ToggleShift';\nexport {default as PrimaryButton} from './PrimaryButton';\nexport {default as SecondButton} from './SecondButton';\nexport {default as TextArea} from './TextArea';\nexport {default as TextInput} from './TextInput';\nexport {default as TimeSelect} from './TimeSelect';\nexport {default as ToggleShift} from './ToggleShift';\nexport {default as UsersList} from './UsersList';","/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/PrimaryButton.jsx",["186"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst PrimaryButton = (props) => {\n  return (\n    <div style={{width: props.width}} className=\"m-center\">\n      <Button variant=\"outlined\" onClick={props.onClick} fullWidth={props.fullWidth}>{props.label}</Button>\n    </div>\n  );\n}\n\nexport default PrimaryButton;","/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/TimeSelect.jsx",["187","188"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {SecondButton} from './index';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: 0,\n    width: 65,\n  },\n}));\n\nconst TimeSelect = (props) => {\n  const classes = useStyles();\n  const arr = [\"14:00\", \"15:00\", \"16:00\", \"17:00\"];\n\n\n  return (\n    <div className=\"d-flex\">\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"grouped-native-select\">Start</InputLabel>\n        <Select native defaultValue=\"\" id=\"grouped-native-select\" onChange={props.handleChangeStart}>\n          <option aria-label=\"\" value=\"\" />\n          {arr.map(value => {\n            return <option key={value}>{value}</option>\n          })}\n        </Select>\n      </FormControl>\n      <p className=\"time-line\">ー</p>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"grouped-select\">End</InputLabel>\n        <Select native defaultValue=\"\" id=\"grouped-native-select\" onChange={props.handleChangeEnd} >\n          <option aria-label=\"None\" value=\"\" />\n          {arr.map(value => {\n            return <option key={value}>{value}</option>\n          })}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nexport default TimeSelect;","/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/ToggleShift.jsx",["189","190","191","192","193"],"import React, {useCallback, useEffect, useState} from 'react'\nimport {TimeSelect} from './index'\nimport PrimaryButton from './PrimaryButton';\nimport SecondButton from './SecondButton';\nimport LoopIcon from '@material-ui/icons/Loop';\nimport { IconButton } from '@material-ui/core';\n\n\nconst ToggleShift = React.memo((props) => {\n  const [timeLine, setTimeLine] = useState([])\n  const [open, setOpen] = useState(false);\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n\n  const toggleOpen = useCallback(() => {\n    setOpen(!open);\n  }, [open, setOpen])\n\n  const handleChangeStart = (event) => {\n    setStart(event.target.value);\n  }\n  const handleChangeEnd = (event) => {\n    setEnd(event.target.value);\n  }\n  \n  useEffect(() => {\n    if (!open) {\n        props.func(\"休み\")\n      } else {\n        props.func(`${start}-${end}`)\n      }\n  }, [start, end, open])\n\n  console.log(props.timeLine);\n  \n  return (\n    <div>\n      <div className=\"d-flex\">\n        <div className=\"d-flex f-between time-field\">\n            <h3>{props.date}<span>(</span>{props.day}<span>)</span></h3>\n            {open ? (\n              <TimeSelect \n                start={start} \n                handleChangeStart={handleChangeStart}\n                end={end} \n                handleChangeEnd={handleChangeEnd}\n              />\n              ) : (\n              <h2>休み</h2>\n            )}\n            <IconButton onClick={toggleOpen} style={{width: \"15%\"}}>\n              <LoopIcon />\n            </IconButton>\n          </div>\n      </div>\n      \n    </div>\n  )\n})\n\nexport default ToggleShift\n","/Users/kitagawakeita/testProject/shift-app/src/templates/ManagementPage.jsx",["194","195"],"/Users/kitagawakeita/testProject/shift-app/src/reducks/store/store.js",["196"],"import {\n  createStore as reduxCreateStore,\n  combineReducers,\n  applyMiddleware,\n} from \"redux\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport thunk from \"redux-thunk\";\n\nimport { GroupsReducer} from \"../groups/reducers\";\nimport { UsersReducer } from \"../users/reducers\";\n\nexport default function createStore(history) {\n  return reduxCreateStore(\n    combineReducers({\n      router: connectRouter(history),\n      users: UsersReducer,\n    }),\n    applyMiddleware(routerMiddleware(history), thunk)\n  );\n}\n","/Users/kitagawakeita/testProject/shift-app/src/templates/MyInfomation.jsx",[],"/Users/kitagawakeita/testProject/shift-app/src/App.jsx",[],"/Users/kitagawakeita/testProject/shift-app/src/Router.jsx",[],"/Users/kitagawakeita/testProject/shift-app/src/components/index.js",["197"],"import ShiftTable from \"./ShiftTable\";\n\nexport {default as ShiftTable} from './ShiftTable';","/Users/kitagawakeita/testProject/shift-app/src/components/ShiftTable.jsx",["198"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 720,\n    padding: 10,\n  },\n  tableCell: {\n    padding: \"12px 6px\",\n    textAlign: \"center\",\n  }\n});\n\n\nconst ShiftTable = () =>  {\n  const classes = useStyles();\n  \n  const shiftArr = [\"10-14\", \"10-14\", \"10-18\", \"休み\", \"10-15\", \"休み\", \"10-L\"]\n  function createData(name, mon, tues, wednes, thurs,  fri, satur, sun ) {\n    return { name, mon, tues, wednes, thurs, fri, satur, sun };\n  }\n  \n  const rows = [\n    createData('あいうえ', \"10.5-10.5\", 6.0, 24, 4.0, 5, \"10-14\", \"休み\"),\n    createData('かきくけこ', 237, \"10-14\", 37, 4.3, \"10-14\", \"休み\"),\n    createData('さしすせそた', 262, 16.0, 24, 6.0, \"10-14\", \"休み\"),\n    createData('なにぬねのはひ', 305, \"10-L\", 67, 4.3, \"10-14\", \"休み\"),\n    createData('ああああああああ', 356, 16.0, 49, 3.9, \"休み\", \"10-L\"),\n    createData('あああ', 356, 16.0, 49, 3.9, \"休み\", \"10-18\"),\n  ];\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead >\n          <TableRow>\n            <TableCell width=\"120px\" className={classes.tableCell}>userName</TableCell>\n            <TableCell width=\"75px\" className={classes.tableCell}>月</TableCell>\n            <TableCell width=\"75px\" className={classes.tableCell}>火</TableCell>\n            <TableCell width=\"75px\" className={classes.tableCell}>水</TableCell>\n            <TableCell width=\"75px\" className={classes.tableCell}>木</TableCell>\n            <TableCell width=\"75px\" className={classes.tableCell}>金</TableCell>\n            <TableCell width=\"75px\" className={classes.tableCell}>土</TableCell>\n            <TableCell width=\"75px\" className={classes.tableCell}>日</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody className={classes.tableCell}>\n          {rows.map((row) => (\n            <TableRow className={classes.tableCell} key={row.name}>\n              <TableCell className={classes.tableCell} component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              {shiftArr.map((value, index) => {\n                <TableCell key={index} className={classes.tableCell}>{value}</TableCell>\n              })}\n              <TableCell className={classes.tableCell}>{row.mon}</TableCell>\n              <TableCell className={classes.tableCell}>{row.tues}</TableCell>\n              <TableCell className={classes.tableCell}>{row.wednes}</TableCell>\n              <TableCell className={classes.tableCell}>{row.thurs}</TableCell>\n              <TableCell className={classes.tableCell}>{row.fri}</TableCell>\n              <TableCell className={classes.tableCell}>{row.satur}</TableCell>\n              <TableCell className={classes.tableCell}>{row.sun}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default ShiftTable;","/Users/kitagawakeita/testProject/shift-app/src/templates/Members.jsx",[],"/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/UsersList.jsx",["199"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '90%',\n    margin: \"0 auto\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  child: {\n    padding: 5,\n  }\n}));\n\nconst UsersList = () => {\n  const classes = useStyles();\n\n  return (\n    <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\n      <ListItem className={classes.child} divider>\n        <ListItemText primary=\"Inbox\" />\n      </ListItem>\n      <ListItem className={classes.child} divider>\n        <ListItemText primary=\"Inbox\" />\n      </ListItem>\n      <ListItem className={classes.child} divider>\n        <ListItemText primary=\"Inbox\" />\n      </ListItem>\n      <ListItem className={classes.child} divider>\n        <ListItemText primary=\"Inbox\" />\n      </ListItem>\n    </List>\n  );\n}\n\nexport default UsersList;","/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/SecondButton.jsx",[],"/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/TextArea.jsx",[],"/Users/kitagawakeita/testProject/shift-app/src/reducks/users/reducers.js",[],"/Users/kitagawakeita/testProject/shift-app/src/reducks/users/actions.js",[],"/Users/kitagawakeita/testProject/shift-app/src/reducks/store/initialState.js",[],"/Users/kitagawakeita/testProject/shift-app/src/serviceWorker.js",[],"/Users/kitagawakeita/testProject/shift-app/src/reducks/users/selectors.js",[],"/Users/kitagawakeita/testProject/shift-app/src/components/UIkit/TextInput.jsx",[],"/Users/kitagawakeita/testProject/shift-app/src/templates/CreateGroupPage.jsx",["200"],"import React, {useCallback, useState} from 'react'\nimport {useDispatch} from 'react-redux'\nimport { Divider } from '@material-ui/core'\nimport { TextInput, PrimaryButton } from '../components/UIkit/index'\nimport {createGroup} from '../reducks/groups/operations';\nimport {signUp} from '../reducks/users/operations';\n\nconst CreateGroupPage = () => {\n  const dispatch = useDispatch();\n  const [groupName, setGroupName] = useState(''),\n    [groupId, setGroupId] = useState(''),\n    [groupPassword, setGroupPassword] = useState('');\n\n  const inputGroupName = useCallback((event) => {\n    setGroupName(event.target.value);\n  }, [setGroupName])\n  const inputGroupId = useCallback((event) => {\n    setGroupId(event.target.value);\n  }, [setGroupId])\n  const inputGroupPassword = useCallback((event) => {\n    setGroupPassword(event.target.value);\n  }, [setGroupPassword])\n\n  return (\n    <div className=\"main-container\"> \n      <h2>グループ作成</h2>\n      <TextInput label={\"グループ名\"} type={\"text\"} fullWidth={true} value={groupName} onChange={inputGroupName} />\n      <Divider />\n      <TextInput label={\"グループID\"} type={\"text\"} fullWidth={true} value={groupId} onChange={inputGroupId} />\n      <Divider />\n      <TextInput label={\"管理者パスワード\"} type={\"password\"} fullWidth={true} value={groupPassword} onChange={inputGroupPassword} />\n      <PrimaryButton onClick={() => dispatch(createGroup(groupName, groupId, groupPassword))} label={\"登録\"} fullWidth={true}/>\n    </div>\n  )\n}\n\nexport default CreateGroupPage\n","/Users/kitagawakeita/testProject/shift-app/src/templates/SignIn.jsx",[],"/Users/kitagawakeita/testProject/shift-app/src/templates/ShiftList.jsx",[],"/Users/kitagawakeita/testProject/shift-app/src/templates/SignUp.jsx",[],"/Users/kitagawakeita/testProject/shift-app/src/reducks/groups/reducers.js",[],"/Users/kitagawakeita/testProject/shift-app/src/reducks/groups/actions.js",[],"/Users/kitagawakeita/testProject/shift-app/src/reducks/groups/operations.js",["201"],"/Users/kitagawakeita/testProject/shift-app/src/firebase/index.js",[],"/Users/kitagawakeita/testProject/shift-app/src/firebase/config.js",[],"/Users/kitagawakeita/testProject/shift-app/src/reducks/users/operations.js",["202"],"import { auth, db, FirebaseTimestamp } from \"../../firebase/index\";\nimport { push } from \"connected-react-router\";\n\nconst usersRef = db.collection(\"users\");\n\nexport const signUp = (username, email, password, confirmPassword) => {\n  return async (dispatch) => {\n    if (\n      username === \"\" ||\n      email === \"\" ||\n      password === \"\" ||\n      confirmPassword === \"\"\n    ) {\n      alert(\"必須項目が未入力です\");\n      return false;\n    }\n\n    // if (!isValidEmailFormat(email)) {\n    //   alert(\"メールアドレスの形式が不正です。もう1度お試しください。\");\n    //   return false;\n    // }\n\n    if (password !== confirmPassword) {\n      alert(\"パスワードが一致しません。もう一度お試しください\");\n      return false;\n    }\n\n    return auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        const user = result.user;\n\n        if (user) {\n          const uid = user.uid;\n          const timestamp = FirebaseTimestamp.now();\n\n          const userInitialData = {\n            created_at: timestamp,\n            email: email,\n            role: \"customer\",\n            uid: uid,\n            updated_at: timestamp,\n            username: username,\n          };\n\n          usersRef\n            .doc(uid)\n            .set(userInitialData)\n            .then(() => {\n              // dispatch(push(\"/\"));\n              console.log(\"ok\")\n            });\n        }\n      });\n  }\n}\n",{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":5,"column":19,"nodeType":"209","messageId":"210","endLine":5,"endColumn":28},{"ruleId":"207","severity":1,"message":"211","line":6,"column":9,"nodeType":"209","messageId":"210","endLine":6,"endColumn":13},{"ruleId":"207","severity":1,"message":"212","line":14,"column":9,"nodeType":"209","messageId":"210","endLine":14,"endColumn":17},{"ruleId":"207","severity":1,"message":"213","line":10,"column":8,"nodeType":"209","messageId":"210","endLine":10,"endColumn":18},{"ruleId":"207","severity":1,"message":"214","line":36,"column":9,"nodeType":"209","messageId":"210","endLine":36,"endColumn":17},{"ruleId":"207","severity":1,"message":"215","line":1,"column":10,"nodeType":"209","messageId":"210","endLine":1,"endColumn":17},{"ruleId":"207","severity":1,"message":"216","line":3,"column":25,"nodeType":"209","messageId":"210","endLine":3,"endColumn":35},{"ruleId":"207","severity":1,"message":"217","line":1,"column":10,"nodeType":"209","messageId":"210","endLine":1,"endColumn":18},{"ruleId":"207","severity":1,"message":"218","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":20},{"ruleId":"207","severity":1,"message":"219","line":1,"column":16,"nodeType":"209","messageId":"210","endLine":1,"endColumn":24},{"ruleId":"207","severity":1,"message":"220","line":3,"column":9,"nodeType":"209","messageId":"210","endLine":3,"endColumn":21},{"ruleId":"207","severity":1,"message":"221","line":3,"column":8,"nodeType":"209","messageId":"210","endLine":3,"endColumn":21},{"ruleId":"207","severity":1,"message":"220","line":4,"column":8,"nodeType":"209","messageId":"210","endLine":4,"endColumn":20},{"ruleId":"207","severity":1,"message":"222","line":10,"column":10,"nodeType":"209","messageId":"210","endLine":10,"endColumn":18},{"ruleId":"207","severity":1,"message":"223","line":10,"column":20,"nodeType":"209","messageId":"210","endLine":10,"endColumn":31},{"ruleId":"224","severity":1,"message":"225","line":32,"column":6,"nodeType":"226","endLine":32,"endColumn":24,"suggestions":"227"},{"ruleId":"207","severity":1,"message":"228","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":20},{"ruleId":"229","severity":1,"message":"230","line":25,"column":7,"nodeType":"231","endLine":25,"endColumn":11},{"ruleId":"207","severity":1,"message":"232","line":9,"column":10,"nodeType":"209","messageId":"210","endLine":9,"endColumn":23},{"ruleId":"207","severity":1,"message":"228","line":1,"column":8,"nodeType":"209","messageId":"210","endLine":1,"endColumn":18},{"ruleId":"233","severity":1,"message":"234","line":61,"column":44,"nodeType":"235","messageId":"236","endLine":61,"endColumn":46},{"ruleId":"207","severity":1,"message":"215","line":6,"column":8,"nodeType":"209","messageId":"210","endLine":6,"endColumn":15},{"ruleId":"207","severity":1,"message":"237","line":6,"column":9,"nodeType":"209","messageId":"210","endLine":6,"endColumn":15},{"ruleId":"207","severity":1,"message":"238","line":1,"column":9,"nodeType":"209","messageId":"210","endLine":1,"endColumn":13},{"ruleId":"207","severity":1,"message":"211","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":14},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"no-unused-vars","'TextInput' is defined but never used.","Identifier","unusedVar","'push' is defined but never used.","'dispatch' is assigned a value but never used.","'SearchIcon' is defined but never used.","'selector' is assigned a value but never used.","'Divider' is defined but never used.","'TimeSelect' is defined but never used.","'formatMs' is defined but never used.","'makeStyles' is defined but never used.","'useState' is defined but never used.","'SecondButton' is defined but never used.","'PrimaryButton' is defined but never used.","'timeLine' is assigned a value but never used.","'setTimeLine' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["241"],"'ShiftTable' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'GroupsReducer' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'signUp' is defined but never used.","'auth' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},"Update the dependencies array to be: [start, end, open, props]",{"range":"244","text":"245"},[867,885],"[start, end, open, props]"]